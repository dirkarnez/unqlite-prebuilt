name: cpp-cmake-mingw-prebuilt-release-actions-workflow
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
  
jobs:
  build:
    name: Create Release
    runs-on: windows-latest
    env:
      libraryName: unqlite
      cmakeInstallationPath: unqlite-installation
      tagName: v1.1.9
      mingwTargetZip: unqlite-${{ github.ref_name }}-mingw64-x86_64-posix-seh-rev0-8.1.0.zip
    steps:
      - name: check mingw version
        run: gcc --version
        
      - name: git clone
        shell: cmd
        run: git clone https://github.com/symisc/unqlite.git && cd unqlite && git checkout ${{ env.tagName }}
          
      - name: cmake
        shell: cmd
        run: | 
          cd unqlite &&^
          cmake.exe -G "MinGW Makefiles" ^
          -DCMAKE_BUILD_TYPE=Release ^
          -DBUILD_SHARED_LIBS=OFF ^
          -DCMAKE_INSTALL_PREFIX="cmake-build/${{ env.cmakeInstallationPath }}" -B./cmake-build
        
      - name: cmake build and install
        shell: cmd
        run: cd unqlite\cmake-build && cmake --build . && cmake --install .
        
      - name: Archive Release
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          directory: "unqlite/cmake-build/${{ env.cmakeInstallationPath }}"
          filename: "${{ env.mingwTargetZip }}"
          
      - name: Release prebuilt
        uses: ncipollo/release-action@v1
        with:
          artifacts: "unqlite/cmake-build/${{ env.cmakeInstallationPath }}/${{ env.mingwTargetZip }}"
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}
